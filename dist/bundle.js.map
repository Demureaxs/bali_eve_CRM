{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,mBAAmB,EAAC;;;;;;;;;;;;;;;ACbnC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,oBAAoB,EAAC;;;;;;;;;;;;;;;;;;ACZpC;;AAEA;;AAEA;AACiD;AACY;AACQ;;AAErE;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ,sEAAM;;AAEd;AACA,QAAQ,4EAAY;;AAEpB;AACA,QAAQ,gFAAgB;AACxB;AACA;AACA;;AAEA;AACA,iEAAe,iBAAiB,EAAC;;;;;;;;;;;;;;;AC5BjC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,SAAS;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,MAAM,EAAC;;;;;;;;;;;;;;;ACnDtkDAAkD;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,YAAY,EAAC;;;;;;;;;;;;;;;;ACrIf;AACb;;AAEA;;AAEyC;;AAEzC;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA,2DAA2D,qDAAU;AACrE;AACA;AACA;AACA,6DAA6D,cAAc;AAC3E;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA,gCAAgC,qDAAU;AAC1C;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA,iEAAe,gBAAgB,EAAC;;;;;;;;;;;;;;;;;;AClEhC;;AAEuD;AACN;AACT;;AAExC;;AAEA;AACA;AACA;AACA,QAAQ,sEAAM;AACd,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,aAAa;AACjD,qCAAqC,qDAAU,eAAe;AAC9D;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,kCAAkC,qDAAU,eAAe;AAC3D,mCAAmC,eAAe;AAClD;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,wBAAwB,EAAC;;;;;;;;;;;;;;;AC5CxC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,cAAc,EAAC;;;;;;;;;;;;;;;;ACb9B;;AAEA;;AAEwC;;AAExC;;AAEA;;AAEA;AACA;AACA,6BAA6B,UAAU;AACvC;AACA;;AAEA;AACA,kBAAkB,uBAAuB;AACzC;AACA;AACA;AACA;;AAEA;AACA,+CAA+C,UAAU;AACzD;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,mCAAmC,UAAU;AAC7C;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,mBAAmB;AACjC,yBAAyB,8BAA8B;;AAEvD;AACA,mCAAmC,mBAAmB,uBAAuB;AAC7E;AACA,qBAAqB;;AAErB;AACA;AACA;AACA,+BAA+B,mBAAmB;AAClD;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gDAAgD,SAAS;AACzD,kCAAkC,qDAAU,WAAW;AACvD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qDAAU,WAAW;AAC7C,yBAAyB,UAAU;AACnC,uBAAuB,WAAW;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA,0BAA0B,cAAc;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,aAAa;AACnE,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,2BAA2B;AACvD;AACA;AACA,wBAAwB;AACxB;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,8BAA8B,2BAA2B;AACzD,2CAA2C;AAC3C;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,qCAAqC,2BAA2B;AAChE;AACA,mCAAmC;AACnC,iCAAiC;AACjC,8BAA8B;AAC9B;AACA,uCAAuC;AACvC,+BAA+B,UAAU;AACzC;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,iEAAe,YAAY,EAAC;;;;;;;;;;;;;;;;;;;;ACnQf;AACb;;AAEA;;AAEiD;AACP;AACa;;AAEvD;;AAEA;;AAEA;;AAEA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,mCAAmC,yDAAY;AAC/C,UAAU,+EAAwB;AAClC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM,sEAAM;;AAEZ;AACA,MAAM;AACN;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,6BAA6B,cAAc;AAC3C,+BAA+B,aAAa;AAC5C,0BAA0B,cAAc;AACxC,yBAAyB,yBAAyB;AAClD,+BAA+B,mBAAmB;AAClD,iCAAiC,qBAAqB;AACtD,iCAAiC,qBAAqB;AACtD,oCAAoC,uBAAuB;AAC3D;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,iEAAe,iBAAiB,EAAC;;;;;;;;;;;;;;;ACtGpB;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iEAAe,WAAW,EAAC;;;;;;;UCjC3B;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNa;AACb;AACA;;AAEA;;AAEA;AACsD;;AAEtD;;AAEA;AACsD;AACyB;AACX;AACpB;AACU;AACE;;AAE5D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,QAAQ,4EAAqB;AAC7B;AACA,2BAA2B,gEAAiB,CAAC,wEAAiB;AAC9D;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAQ,4EAAqB;;AAE7B;AACA;;AAEA;AACA,2BAA2B,gEAAiB,CAAC,wEAAiB;AAC9D,CAAC;;AAED;AACA;AACA;AACA,QAAQ,4EAAqB;;AAE7B;AACA;;AAEA;AACA,2BAA2B,gEAAiB,CAAC,wEAAiB;;AAE9D;AACA,EAAE,yEAAmB;AACrB,CAAC;;AAED;AACA;AACA,QAAQ,4EAAqB;;AAE7B;AACA;;AAEA;AACA;;AAEA;AACA,2BAA2B,uEAAwB,CAAC,wEAAiB;AACrE,CAAC;;AAED;AACA;AACA;AACA,2BAA2B,6DAAc;AACzC,CAAC;;AAED;AACA;AACA;AACA,2BAA2B,kEAAmB;AAC9C,CAAC;;AAED;AACA;AACA;AACA,2BAA2B,mEAAoB;AAC/C,CAAC","sources":["webpack://vanilla-crm/./src/js/components/AddWedding.js","webpack://vanilla-crm/./src/js/components/EditWedding.js","webpack://vanilla-crm/./src/js/components/Overview.js","webpack://vanilla-crm/./src/js/components/OverviewComponents/Header.js","webpack://vanilla-crm/./src/js/components/OverviewComponents/TaskOverview.js","webpack://vanilla-crm/./src/js/components/OverviewComponents/UpcomingWeddings.js","webpack://vanilla-crm/./src/js/components/PaymentTimeline.js","webpack://vanilla-crm/./src/js/components/Tasks.js","webpack://vanilla-crm/./src/js/components/WeddingModal.js","webpack://vanilla-crm/./src/js/components/Weddings.js","webpack://vanilla-crm/./src/js/utilities/StateManagement.js","webpack://vanilla-crm/webpack/bootstrap","webpack://vanilla-crm/webpack/runtime/define property getters","webpack://vanilla-crm/webpack/runtime/hasOwnProperty shorthand","webpack://vanilla-crm/webpack/runtime/make namespace object","webpack://vanilla-crm/./src/js/index.js"],"sourcesContent":["const html = String.raw;\n\n//---------------------------------- Rendered HTML Output -----------------------------------------\n\n// the Add Weddings Dashboard Return HTML\nfunction AddWeddingDashboard() {\n  return html`\n    <div>\n      <h1>I am the add weddings dashboard</h1>\n    </div>\n  `;\n}\n\nexport default AddWeddingDashboard;\n","const html = String.raw;\n\n//---------------------------------- Rendered HTML Output -----------------------------------------\n\nfunction EditWeddingDashboard(obj) {\n  return html`\n    <div>\n      <h1>I am the edit weddings dashboard</h1>\n    </div>\n  `;\n}\n\nexport default EditWeddingDashboard;\n","const html = String.raw;\n\n//---------------------------------- Module Imports -----------------------------------------\n\n// Imports for Overview Components\nimport Header from './OverviewComponents/Header';\nimport TaskOverview from './OverviewComponents/TaskOverview';\nimport UpcomingWeddings from './OverviewComponents/UpcomingWeddings';\n\n//---------------------------------- Rendered HTML Output -----------------------------------------\n\n// the Overview Dashboard Return HTML\nfunction OverviewDashboard(obj, e) {\n  return html`\n    <section class=\"text-gray-700 space-y-4\">\n      <!-- Header Component -->\n      ${Header('Overview')}\n\n      <!-- Task Overview Component -->\n      ${TaskOverview()}\n\n      <!-- Upcoming Weddings Section -->\n      ${UpcomingWeddings(obj)}\n    </section>\n  `;\n}\n\n// default export of Overview Dashboard\nexport default OverviewDashboard;\n","const html = String.raw;\n\n//---------------------------------- Rendered HTML Output -----------------------------------------\n\nfunction Header(viewName) {\n  return html`\n    <header class=\"flex justify-between items-center\">\n      <!-- Current page Component -->\n      <div class=\"flex items-center space-x-2\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke-width=\"1.5\"\n          stroke=\"currentColor\"\n          class=\"w-4 h-4\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            d=\"M15.75 19.5L8.25 12l7.5-7.5\"\n          />\n        </svg>\n        <!-- Page Title -->\n        <h2 class=\"text-xl font-bold\">${viewName}</h2>\n      </div>\n\n      <!-- Affiliated Users Component -->\n      <div class=\"flex justify-between items-center -space-x-3\">\n        <div\n          class=\"h-10 w-10 bg-gray-500 rounded-full border-2 flex items-center justify-center\"\n        ></div>\n        <div\n          class=\"h-10 w-10 bg-gray-500 rounded-full border-2 flex items-center justify-center\"\n        ></div>\n        <div\n          class=\"h-10 w-10 bg-gray-500 rounded-full border-2 flex items-center justify-center\"\n        ></div>\n        <div\n          class=\"h-10 w-10 bg-gray-500 rounded-full border-2 flex items-center justify-center\"\n        ></div>\n        <div\n          class=\"h-10 w-10 bg-gray-500 rounded-full border-2 flex items-center justify-center text-sm text-gray-200\"\n        >\n          +12\n        </div>\n      </div>\n    </header>\n  `;\n}\n\nexport default Header;\n","const html = String.raw;\n\n//---------------------------------- Rendered HTML Output -----------------------------------------\n\nfunction TaskOverview() {\n  return html`\n    <section class=\"flex gap-4 h-[280px]\">\n      <div class=\"h-full flex-1 grid grid-rows-2 grid-cols-2 gap-4\">\n        <!-- Micro Task Component (Total) -->\n        <div\n          class=\"text-slate-200 rounded-lg flex justify-between items-center p-6 bg-gradient-to-br from-green-900 to-green-800 border border-gray-200  shadow-lg\"\n        >\n          <div class=\"space-y-2\">\n            <h1 class=\"text-3xl font-bold\">50</h1>\n            <p class=\"text-sm font-semibold\">Total Tasks</p>\n            <p class=\"text-sm font-semibold\">+7 this week</p>\n          </div>\n\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"currentColor\"\n            class=\"w-6 h-6 self-start\"\n          >\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M10.5 6a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0zm0 6a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0zm0 6a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0z\"\n              clip-rule=\"evenodd\"\n            />\n          </svg>\n        </div>\n\n        <!-- Micro Tasks Component (completed) -->\n        <div\n          class=\"text-gray-700 rounded-lg flex justify-between items-center p-6 bg-gradient-to-br from-slate-100 to-slate-200 border border-gray-200  shadow-lg\"\n        >\n          <div class=\"space-y-2\">\n            <h1 class=\"text-3xl font-bold\">12</h1>\n            <p class=\"text-sm font-semibold\">Completed</p>\n            <p class=\"text-sm font-semibold\">+1 this week</p>\n          </div>\n\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"currentColor\"\n            class=\"w-6 h-6 self-start\"\n          >\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M10.5 6a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0zm0 6a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0zm0 6a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0z\"\n              clip-rule=\"evenodd\"\n            />\n          </svg>\n        </div>\n\n        <!-- Micro Tasks Component (Overdue) -->\n        <div\n          class=\"text-gray-700 rounded-lg flex justify-between items-center p-6 bg-gradient-to-br from-slate-100 to-slate-200 border border-gray-200  shadow-lg\"\n        >\n          <div class=\"space-y-2\">\n            <h1 class=\"text-3xl font-bold\">3</h1>\n            <p class=\"text-sm font-semibold\">Overdue</p>\n            <p class=\"text-sm font-semibold\">+1 this week</p>\n          </div>\n\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"currentColor\"\n            class=\"w-6 h-6 self-start\"\n          >\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M10.5 6a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0zm0 6a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0zm0 6a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0z\"\n              clip-rule=\"evenodd\"\n            />\n          </svg>\n        </div>\n\n        <!-- Micro Tasks Component (Todos) -->\n        <div\n          class=\"text-gray-700 rounded-lg flex justify-between items-center p-6 bg-gradient-to-br from-slate-200 to-slate-300 border border-gray-300  shadow-lg\"\n        >\n          <div class=\"space-y-2\">\n            <h1 class=\"text-3xl font-bold\">23</h1>\n            <p class=\"text-sm font-semibold\">Todo Tasks</p>\n            <p class=\"text-sm font-semibold\">+7 this week</p>\n          </div>\n\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"currentColor\"\n            class=\"w-6 h-6 self-start\"\n          >\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M10.5 6a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0zm0 6a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0zm0 6a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0z\"\n              clip-rule=\"evenodd\"\n            />\n          </svg>\n        </div>\n      </div>\n\n      <!-- Get Premium Plus Section -->\n      <div\n        class=\"h-full w-[300px] 2xl:w-[400px] text-4xl font-bold flex justify-between flex-col p-6 rounded-lg bg-gradient-to-br from-slate-100 to-slate-200 border border-gray-200  shadow-lg\"\n      >\n        <p>\n          Get <span class=\"text-green-800\">Premium+</span> to manage more than\n          100 projects\n        </p>\n        <aside class=\"text-base\">Learn More &rarr;</aside>\n      </div>\n\n      <!-- Overall Progress Tracking Component -->\n      <div\n        class=\"bg-slate-200 h-full w-[250px] flex items-center justify-center rounded-lg bg-gradient-to-br from-slate-100 to-slate-200 border border-gray-200  shadow-lg\"\n      >\n        <div\n          class=\" h-48 w-48 rounded-full border-[12px] border-green-700 flex items-center justify-center\"\n        >\n          <div class=\"text-center space-y-2\">\n            <p class=\"text-4xl font-bold\">52%</p>\n            <p class=\"text-xs font-semibold\">Overall Progress</p>\n          </div>\n        </div>\n      </div>\n    </section>\n  `;\n}\n\nexport default TaskOverview;\n","'use strict';\nconst html = String.raw;\n\n//---------------------------------- Module Imports -----------------------------------------\n\nimport { formatDate } from '../Weddings';\n\n//---------------------------------- Rendered HTML Output -----------------------------------------\n\nfunction UpcomingWeddings(obj) {\n  return html`\n    <div>\n      <h2 class=\"text-xl font-bold py-6\">Upcoming Weddings</h2>\n      <section class=\"grid grid-cols-3 gap-4 h-[250px]\">\n        ${obj\n          .sort(\n            (a, b) => new Date(a.date).getTime() - new Date(b.date).getTime()\n          )\n          .slice(0, 3)\n          .map(wedding => {\n            // wedding overview container\n            // Returned html template\n            return html`\n              <div\n                class=\" rounded-lg bg-gradient-to-br from-slate-100 to-slate-200 border border-gray-200  shadow-lg p-6 flex items-start\"\n              >\n                <div class=\" space-y-2 flex-1\">\n                  <h2>\n                    <span class=\"font-bold\">Wedding:</span> ${wedding.name}\n                  </h2>\n                  <p>\n                    <span class=\"font-bold\">Date:</span> ${formatDate(\n                      wedding.date\n                    )}\n                  </p>\n                  <p><span class=\"font-bold\">Venue:</span> ${wedding.venue}</p>\n                  <h2 class=\"font-bold pt-4\">Upcoming Tasks:</h2>\n                  <div class=\" space-y-2\">\n                    ${wedding.todos\n                      .sort((a, b) => a.deadline - b.deadline)\n                      .slice(0, 2)\n                      .map(todo => {\n                        return html`\n                          <div class=\"space-y-2\">\n                            <p>\n                              <span class=\"font-bold\">Task:</span> ${todo.task}\n                            </p>\n                            <p>\n                              <span class=\"font-bold\">Deadline:</span>\n                              ${formatDate(todo.deadline)}\n                            </p>\n                          </div>\n                        `;\n                      })\n                      .join(' ')}\n                  </div>\n                </div>\n              </div>\n            `;\n          })\n          .join(' ')}\n      </section>\n    </div>\n  `;\n}\n\nexport default UpcomingWeddings;\n","const html = String.raw;\n\nimport allWeddings from '../utilities/StateManagement';\nimport Header from './OverviewComponents/Header';\nimport { formatDate } from './Weddings';\n\n//---------------------------------- Rendered HTML Output -----------------------------------------\n\nfunction PaymentTimelineDashboard(obj, e) {\n  return html`\n    <div class=\"space-y-4\">\n      ${Header(e.target.innerText)}\n      ${obj\n        .sort((a, b) => new Date(a.Date) - new Date(b.date))\n        .map(\n          wedding =>\n            html` <!-- Rendering In The Payment Components -->\n              <div\n                class=\"space-y-4 bg-slate-200 p-6 rounded-lg mb-4  bg-gradient-to-br from-slate-100 to-slate-200 border border-gray-200  shadow-lg\"\n              >\n                <section class=\"space-y-2\">\n                  <h1>Wedding of: ${wedding.name}</h1>\n                  <p>Wedding Date: ${formatDate(wedding.date)}</p>\n                  <h3>Payments:</h3>\n                  <ul>\n                    ${wedding.payments\n                      .map(payment => {\n                        return html`\n                          <div>\n                            <li>${formatDate(payment.date)}</li>\n                            <li>$${payment.amount}</li>\n                          </div>\n                        `;\n                      })\n                      .join(' ')}\n                  </ul>\n                </section>\n              </div>`\n        )\n        .join(' ')}\n    </div>\n  `;\n}\n\nexport default PaymentTimelineDashboard;\n","const html = String.raw;\n\n//---------------------------------- Rendered HTML Output -----------------------------------------\n\n// the Tasks Dashboard Return HTML\nfunction TasksDashboard() {\n  return html`\n    <div>\n      <h1>I am the tasks dashboard</h1>\n    </div>\n  `;\n}\n\nexport default TasksDashboard;\n","const html = String.raw;\n\n//---------------------------------- Module Imports -----------------------------------------\n\nimport { formatDate } from './Weddings';\n\n//---------------------------------- Selectors -----------------------------------------\n\n//---------------------------------- Helper Functions -----------------------------------------\n\nfunction itemProgress(classname) {\n  let checkboxes = document.querySelectorAll(\n    `input[type=\"checkbox\"]${classname}`\n  );\n  let count = 0;\n\n  // loop through and check the count of completed tasks each time\n  for (let i = 0; i < checkboxes.length; i++) {\n    if (checkboxes[i].checked) {\n      count++;\n    }\n  }\n\n  document\n    .querySelectorAll(`input[type=\"checkbox\"]${classname}`)\n    .forEach(checkbox =>\n      checkbox.addEventListener('click', e => {\n        // if the checkbox is checked increase the count\n        if (e.target.checked) {\n          count++;\n        } else {\n          count--;\n        }\n\n        // get the total number of checkbox items\n        let progress = document.querySelectorAll(\n          `input[type=\"checkbox\"]${classname}`\n        ).length;\n\n        // calculate the percentage\n        let percentage = count / progress;\n\n        // set the inner text of the progress to the percentage completed\n        document.querySelector(\n          `#${classname.slice(1)}PercentageCompleted`\n        ).innerText = `${(percentage * 100).toFixed(0)}%`;\n\n        // set width of progress bar equal to the percentage\n        document.querySelector(`#${classname.slice(1)}Bar`).style.width = `${(\n          percentage * 100\n        ).toFixed(0)}%`;\n\n        // set bg color to green if complete\n        if (percentage > 99) {\n          document\n            .querySelector(`#${classname.slice(1)}Bar`)\n            .classList.replace('bg-blue-500', 'bg-green-500');\n        }\n      })\n    );\n}\n\n//---------------------------------- Rendered HTML Output -----------------------------------------\n\nfunction WeddingModal(obj) {\n  // call venue progress to attach event listeners after the html has loaded\n  setTimeout(() => {\n    obj.checklist.map(item =>\n      itemProgress(`.${item.type.toLowerCase()}Progress`)\n    );\n  }, 0);\n\n  console.log(obj);\n\n  // The returned html\n  return html`\n    <div\n      class=\"modal-content z-10 h-[90%] bg-slate-100 w-[60%] rounded-lg overflow-hidden bg-gradient-to-br from-slate-100 to-slate-200 border border-gray-200  shadow-lg flex \"\n    >\n      <div\n        class=\"h-full w-full p-6 overflow-y-scroll space-y-10 flex-1 scrollbar-none\"\n      >\n        <!-- Modal Details (Wedding Name and Date) -->\n        <div class=\"flex space-x-4 justify-start\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke-width=\"1.5\"\n            stroke=\"currentColor\"\n            class=\"w-6 h-6 mt-1\"\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              d=\"M9 17.25v1.007a3 3 0 01-.879 2.122L7.5 21h9l-.621-.621A3 3 0 0115 18.257V17.25m6-12V15a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 15V5.25m18 0A2.25 2.25 0 0018.75 3H5.25A2.25 2.25 0 003 5.25m18 0V12a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 12V5.25\"\n            />\n          </svg>\n\n          <div>\n            <h1 class=\"font-semibold text-lg\">${obj.name}</h1>\n            <h2 class=\"text-sm\">${formatDate(obj.date)}</h2>\n          </div>\n        </div>\n\n        <!-- Notifications section -->\n        <div>\n          <h2 class=\" font-semibold text-sm\">Notifications:</h2>\n        </div>\n\n        <!-- Description section -->\n        <div class=\"flex space-x-4\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke-width=\"1.5\"\n            stroke=\"currentColor\"\n            class=\"w-6 h-6\"\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              d=\"M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5\"\n            />\n          </svg>\n          <div class=\"text-sm\">\n            <div class=\"flex space-x-4\">\n              <h2 class=\" font-semibold text-base\">Description</h2>\n              <button class=\"bg-gray-200 px-2 rounded-lg\">Edit</button>\n            </div>\n            <h3>Date: ${formatDate(obj.date)}</h3>\n            <h3>Venue: ${obj.venue}</h3>\n            <h3>Pax: ${obj.guests}</h3>\n          </div>\n        </div>\n\n        <!-- Attachments section -->\n        <div class=\" flex space-x-4\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke-width=\"1.5\"\n            stroke=\"currentColor\"\n            class=\"w-6 h-6\"\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              d=\"M18.375 12.739l-7.693 7.693a4.5 4.5 0 01-6.364-6.364l10.94-10.94A3 3 0 1119.5 7.372L8.552 18.32m.009-.01l-.01.01m5.699-9.941l-7.81 7.81a1.5 1.5 0 002.112 2.13\"\n            />\n          </svg>\n\n          <h1 class=\"font-semibold\">Attachments:</h1>\n        </div>\n\n        <!-- Renders In the Checklist -->\n        ${obj.checklist\n          .map(section => {\n            return html`\n              <div class=\" space-y-2\">\n                <div id=${section.type} class=\"space-y-2\">\n                  <div class=\"flex space-x-4\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke-width=\"1.5\"\n                      stroke=\"currentColor\"\n                      class=\"w-6 h-6\"\n                    >\n                      <path\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                        d=\"M11.35 3.836c-.065.21-.1.433-.1.664 0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75 2.25 2.25 0 00-.1-.664m-5.8 0A2.251 2.251 0 0113.5 2.25H15c1.012 0 1.867.668 2.15 1.586m-5.8 0c-.376.023-.75.05-1.124.08C9.095 4.01 8.25 4.973 8.25 6.108V8.25m8.9-4.414c.376.023.75.05 1.124.08 1.131.094 1.976 1.057 1.976 2.192V16.5A2.25 2.25 0 0118 18.75h-2.25m-7.5-10.5H4.875c-.621 0-1.125.504-1.125 1.125v11.25c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125V18.75m-7.5-10.5h6.375c.621 0 1.125.504 1.125 1.125v9.375m-8.25-3l1.5 1.5 3-3.75\"\n                      />\n                    </svg>\n                    <div class=\"flex justify-between w-full\">\n                      <h1>\n                        <span class=\"font-semibold\">${section.type}:</span>\n                        ${section.vendor}\n                      </h1>\n                      <div class=\"flex space-x-2\">\n                        <button\n                          class=\"bg-slate-300 px-2 py-1 rounded-sm text-sm\"\n                        >\n                          Hide Checked Items\n                        </button>\n                        <button\n                          class=\"bg-slate-300 px-2 py-1 rounded-sm text-sm\"\n                        >\n                          Delete\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"flex space-x-3 items-center\">\n                    <p\n                      id=\"${section.type.toLowerCase()}ProgressPercentageCompleted\"\n                      class=\"text-[10px]\"\n                    >\n                      ${(section.tasks.filter(task => task.completed === 'true')\n                        .length /\n                        section.tasks.length) *\n                      100}%\n                    </p>\n                    <div\n                      class=\"w-full h-2 bg-gray-300  rounded-full overflow-hidden\"\n                    >\n                      <div\n                        id=\"${section.type.toLowerCase()}ProgressBar\"\n                        class=\"h-full w-[${(section.tasks.filter(\n                          task => task.completed === 'true'\n                        ).length /\n                          section.tasks.length) *\n                        100}%] z-10 bg-green-500  transition-all duration-700\"\n                      ></div>\n                    </div>\n                  </div>\n\n                  <!-- Render Each Section of the tasks and lists -->\n                  ${section.tasks\n                    .map(task => {\n                      return html`\n                        <div class=\"flex space-x-4\">\n                          <input\n                            class=\"${section.type.toLowerCase()}Progress mx-1\"\n                            type=\"checkbox\"\n                            name=${task.task.replace(' ', '').toLowerCase()}\n                            id=${task.task.replace(' ', '').toLowerCase()}\n                            ${task.completed && 'checked'}\n                          />\n                          <label for=${task.task.replace(' ', '').toLowerCase()}\n                            >${task.task}</label\n                          >\n                        </div>\n                      `;\n                    })\n                    .join(' ')}\n                </div>\n              </div>\n            `;\n          })\n          .join(' ')}\n\n          </div>\n          <div class=\"w-[25%] p-6\">This is the side Menu</div>\n        </div>\n      </div>\n    </div>\n  `;\n}\n\n//---------------------------------- QuerySelectors -----------------------------------------\n\n//---------------------------------- Exports -----------------------------------------\n\nexport default WeddingModal;\n","'use strict';\nconst html = String.raw;\n\n//---------------------------------- Module Imports -----------------------------------------\n\nimport Header from './OverviewComponents/Header';\nimport WeddingModal from './WeddingModal';\nimport allWeddings from '../utilities/StateManagement';\n\n//---------------------------------- Element Selectors -----------------------------------------\n\nconst modalContainer = document.querySelector('#modalContainer');\n\n//---------------------------------- Helper Functions -----------------------------------------\n\n// helper function to format the date\nexport function formatDate(date) {\n  const options = {\n    weekday: 'long',\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric',\n  };\n  return new Intl.DateTimeFormat('en-US', options).format(new Date(date));\n}\n\n// function to close the modal and remove event listener\nfunction closeModal(e) {\n  // make sure the click is not happening inside the modal\n  if (e.target.closest('.modal-content')) {\n    return;\n  }\n\n  modalContainer.innerHTML = '';\n  modalContainer.classList.replace('flex', 'hidden');\n\n  modalContainer.removeEventListener('click', closeModal);\n}\n\n//---------------------------------- Event Listeners -----------------------------------------\n\n// helperfunction to add the wedding event listeners post render\nexport function addWeddingListeners() {\n  document.querySelectorAll('.weddingContainer').forEach(wedding =>\n    wedding.addEventListener('click', e => {\n      const weddingContainer = e.target.closest('.weddingContainer');\n      if (weddingContainer) {\n        // log the id\n        console.log(weddingContainer.id);\n\n        // make the modal Visible\n        modalContainer.classList.replace('hidden', 'flex');\n\n        // hide modal and remove event listener\n        modalContainer.addEventListener('click', closeModal);\n\n        // render modal with details filtered by id\n        modalContainer.innerHTML = WeddingModal(\n          allWeddings.state.filter(\n            wedding => wedding._id === weddingContainer.id\n          )[0]\n        );\n      }\n    })\n  );\n}\n\n//---------------------------------- Rendered Html Output -----------------------------------------\n\n// this function returns the template html for the Overview page\nfunction WeddingsDashboard(obj, e) {\n  // return mapping the object\n  return html` <section class=\"space-y-4\">\n    <!-- Renders In the header -->\n    ${Header(e.target.innerText)}\n\n    <!-- Renders in the Body -->\n    ${obj\n      .map(wedding => {\n        return html`\n          <div\n            id=${wedding._id}\n            class=\"weddingContainer bg-slate-200 p-6 last:mb-0 mb-4 rounded-lg bg-gradient-to-br from-slate-100 to-slate-200 border border-gray-200  shadow-lg cursor-pointer\"\n          >\n            <section class=\"space-y-2\">\n              <h1>Planner: ${wedding.agent}</h1>\n              <p>Wedding of: ${wedding.name}</p>\n              <p>Email: ${wedding.email}</p>\n              <p>Date: ${formatDate(wedding.date)}</p>\n              <p>Decoration: ${wedding.decoration}</p>\n              <p>photographer: ${wedding.photographer}</p>\n              <p>Videographer: ${wedding.videographer}</p>\n              <p>Vendor Progress: ${wedding.vendorProgress}</p>\n            </section>\n          </div>\n        `;\n      })\n      .join(' ')}\n  </section>`;\n}\n\n// export Overview for use in other elements\nexport default WeddingsDashboard;\n","'use strict';\n\n// state management class and constructor\nclass StateManagement {\n  // constructor with two properties\n  constructor() {\n    // sets this. state to an empty string\n    this.state = '';\n    // cache property to prevent unnecessary fetches\n    this.cache = '';\n  }\n\n  // fetchData function, takes the url as its arg\n  async fetchData(apiUrl) {\n    // check cache, if it exists...\n    if (this.cache) {\n      // set this.state to spread state and spread cache\n      this.state = this.cache;\n    }\n\n    // otherwise response is await fetch\n    const response = await fetch(apiUrl);\n    // set data to the result of response to json format\n    const data = await response.json();\n    // spread this.state and data to this.state\n    this.state = await data;\n  }\n}\n\n// create a new instance called all weddings\nconst allWeddings = new StateManagement();\n\n// export allWeddings for use elsewhere\nexport default allWeddings;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","'use strict';\n// enables html syntax highlighting in template literals\nconst html = String.raw;\n\n//---------------------------------- State Management -----------------------------------------\n\n// State Management for the weddings api fetch\nimport allWeddings from './utilities/StateManagement';\n\n//---------------------------------- Module Imports -----------------------------------------\n\n// importing dashboard components\nimport OverviewDashboard from './components/Overview';\nimport WeddingsDashboard, { addWeddingListeners } from './components/Weddings';\nimport PaymentTimelineDashboard from './components/PaymentTimeline';\nimport TasksDashboard from './components/Tasks';\nimport AddWeddingDashboard from './components/AddWedding';\nimport EditWeddingDashboard from './components/EditWedding';\n\n//---------------------------------- Selectors -----------------------------------------\n\n// selectors for each of the side nav components\nconst overviewNav = document.querySelector('#overview');\nconst weddingsNav = document.querySelector('#weddings');\nconst paymentTimelineNav = document.querySelector('#paymentTimeline');\nconst tasksNav = document.querySelector('#tasks');\nconst addWeddingNav = document.querySelector('#addWedding');\nconst editWeddingNav = document.querySelector('#editWedding');\n\n// Selector for the App Container\nconst appContainer = document.querySelector('#appContainer');\n// selector for the Modal Container\nconst modalContainer = document.querySelector('#modalContainer');\n\n//---------------------------------- Helper Functions -----------------------------------------\n\n// function to set the initial state of the app\nasync function initialState() {\n  await allWeddings.fetchData('/bali_eve_CRM/data/mockData.json');\n  // await allWeddings.fetchData('../data/mockData.json');\n  appContainer.innerHTML = OverviewDashboard(allWeddings.state);\n}\n// calls the Initial State function.\ninitialState();\n\n//---------------------------------- Event Listeners -----------------------------------------\n\n// event listener for the overview section\noverviewNav.addEventListener('click', async e => {\n  // github fetch\n  await allWeddings.fetchData('/bali_eve_CRM/data/mockData.json');\n\n  // development fetch\n  // await allWeddings.fetchData('../data/mockData.json');\n\n  // render the overview dashboard\n  appContainer.innerHTML = OverviewDashboard(allWeddings.state, e);\n});\n\n// event listener for the allWeddings section\nweddingsNav.addEventListener('click', async e => {\n  // trigger the fetch method in the all weddings object for github\n  await allWeddings.fetchData('/bali_eve_CRM/data/mockData.json');\n\n  // trigger the fetch method in the all weddings object for development\n  // await allWeddings.fetchData('../data/mockData.json');\n\n  // pass the state to the weddingsDashboard and render it\n  appContainer.innerHTML = WeddingsDashboard(allWeddings.state, e);\n\n  // adds the event listeners for each wedding\n  addWeddingListeners();\n});\n\npaymentTimelineNav.addEventListener('click', async e => {\n  // trigger the fetch method in the allWeddings object github\n  await allWeddings.fetchData('/bali_eve_CRM/data/mockData.json');\n\n  // trigger the fetch method in the allWeddings object development\n  // await allWeddings.fetchData('../data/mockData.json');\n\n  // clear innerHTML for the app container\n  appContainer.innerHTML = '';\n\n  // Remder Payment Timeline and pass state\n  appContainer.innerHTML = PaymentTimelineDashboard(allWeddings.state, e);\n});\n\n// event listener for handling the triggering of tasksNav\ntasksNav.addEventListener('click', async e => {\n  // render in the Tasks Dashboard\n  appContainer.innerHTML = TasksDashboard();\n});\n\n// event listener for triggering the addWeddings page\naddWeddingNav.addEventListener('click', async e => {\n  // render in the Add Weddings Dashboard\n  appContainer.innerHTML = AddWeddingDashboard();\n});\n\n// event listener for editing weddings\neditWeddingNav.addEventListener('click', async e => {\n  // render in the Edit Weddings Dashboard\n  appContainer.innerHTML = EditWeddingDashboard();\n});\n"],"names":[],"sourceRoot":""}